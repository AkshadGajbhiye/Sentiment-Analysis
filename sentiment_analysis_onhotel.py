# -*- coding: utf-8 -*-
"""Sentiment_Analysis_OnHotel.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1SoVYocDptI-GkuLC7bH6HNWry0n9Q_jc
"""

import os
import numpy as np
import pandas as pd

df = pd.read_table("/Users/aksha/Downloads/Restaurant_Reviews 1.tsv")

df["Liked"].value_counts()

df_negative=df[df['Liked']<1]
df_negative.reset_index(drop=True)

df_positive=df[df['Liked']==1]
df_positive.reset_index(drop=True)

print(len(df_positive))

print(len(df_negative))

df_five=df_positive.loc[:len(df_negative)]

df_all=pd.concat([df_negative,df_five],axis=0)
df_all=df_all.reset_index(drop=True)

len(df_all)

df_all["Liked"]=np.where(df_all["Liked"]==1,"Postive","Negative")

df_all.tail()

df_all.head()

df_all=df_all.sample(frac=1)
df_all=df_all.reset_index(drop=True)

df_all.head()

from sklearn.model_selection import train_test_split
x_train,x_test,y_train,y_test=train_test_split(df_all.Review,df_all.Liked)

from sklearn.feature_extraction.text import CountVectorizer
v = CountVectorizer()
x_train_vec = v.fit_transform(x_train)
x_test_vec = v.transform(x_test)

from sklearn import svm
clf_svm = svm.SVC(kernel='linear')
clf_svm.fit(x_train_vec, y_train)

clf_svm.score(x_test_vec, y_test)

from sklearn.metrics import f1_score
f1_score(y_test, clf_svm.predict(x_test_vec), average=None)

rev=["This place is not good"]
rev_vec=v.transform(rev)
clf_svm.predict(rev_vec)

